name: CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  pre-commit_check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4.5.0
      with:
        python-version: '3.11.1'
    - uses: pdm-project/setup-pdm@v3
      name: Setup PDM
      with:
        python-version: 3.11  # Version range or exact version of a Python version to use, the same as actions/setup-python
        architecture: x64     # The target architecture (x86, x64) of the Python interpreter. the same as actions/setup-python
        version: 2.4.8        # The version of PDM to install. Leave it as empty to use the latest version from PyPI, or 'head' to use the latest version from GitHub
        prerelease: false     # Allow prerelease versions to be installed
        enable-pep582: true   # Enable PEP 582 package loading globally
    - name: Install dependencies
      run: pdm install
    - name: check
      run: pdm run pre-commit run --all-files
  documentation_generation:
    needs: pre-commit_check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-python@v4.5.0
      with:
        python-version: '3.11.1'
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
        ref: pages
    - name: Pull changes from main branch and merge
      run: |
        git config --local user.email pl.morfin.pl@gmail.com
        git config --global user.name "morfinPL"
        git merge origin/main
    - uses: pdm-project/setup-pdm@v3
      name: Setup PDM
      with:
        python-version: 3.11  # Version range or exact version of a Python version to use, the same as actions/setup-python
        architecture: x64     # The target architecture (x86, x64) of the Python interpreter. the same as actions/setup-python
        version: 2.4.8        # The version of PDM to install. Leave it as empty to use the latest version from PyPI, or 'head' to use the latest version from GitHub
        prerelease: false     # Allow prerelease versions to be installed
        enable-pep582: true   # Enable PEP 582 package loading globally
    - name: Install dependencies
      run: pdm install -G:all
    - name: Generate documentation
      run: |
        pdm run sphinx-apidoc -f -o doc/source .
        rm -rf docs
        cd doc
        pdm run make html
        cd ..
        rm -rf docs/doctrees
        echo "<meta http-equiv=\"refresh\" content=\"0; url=./html/index.html\"/>" > docs/index.html
        touch docs/.nojekyll
    - name: Commit new documentation
      run: |
        commit_hash=$(git rev-parse HEAD)
        git add docs
        git clean -df
        git diff --quiet && git diff --staged --quiet || git commit -am "Update docs for commit $commit_hash."
    - name: Push new documentation
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: pages
